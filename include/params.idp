/*
   Author(s): Johann Moulin <johann.moulin@onera.fr>
              Pierre Jolivet <pierre.jolivet@enseeiht.fr>
              Olivier Marquet <olivier.marquet@onera.fr>
        Date: 2018-07-20

   Copyright (C) 2018-     Office national d'études et de recherches aérospatiales
                 2018-     Centre National de la Recherche Scientifique

   This script is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

   If you use this script, you are kindly asked to cite the following article:

   "Augmented Lagrangian Preconditioning for Large-Scale Hydrodynamic Stability",
   J. Moulin, P. Jolivet, and O. Marquet (2019).
 */

macro trueRestrict()true//
macro removeZeros()true//
macro dimension()3//
include "macro_ddm.idp"

macro def(i)[i, i#B, i#C, i#D]//
macro init(i)[i, i, i, i]//

real Re = getARGV("-Re", 100);
real gamma = getARGV("-gamma", 0.1);
real nu = 1.0/Re;
string nf = getARGV("-mesh", "FlatPlate3D.mesh");
func Pk = [P2, P2, P2, P1];

string MeshFileName = "Mesh/" + nf;
string SaveDirName = "State";

if(mpirank == 0) {
    cout << "##################################### " << endl;
    cout << "###  Parameters ##################### " << endl;
    cout << "##################################### " << endl;
    cout << "Re ..................... " << Re << endl;
    cout << "gamma .................. " << gamma << endl;
    cout << "mesh ................... " << nf << endl;
    cout << endl;
}
