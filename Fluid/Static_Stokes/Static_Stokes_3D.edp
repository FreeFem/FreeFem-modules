/*
Static_Stokes_3D.edp, solve the 3D static Stokes equations with FreeFem++

Author: Simon Garnotel
Date: 13/12/2017
*/

load "msh3"
load "iovtk"

//Parameters
real uMax = 10.;

real Mu = 1.;

func fx = 0.;
func fy = 0.;
func fz = 0.;

//Mesh
int nn = 5;		//Mesh quality
real L = 5.;	//Pipe length
real D = 1.;	//Pipe diameter
int Wall = 1;	//Pipe wall label
int Inlet = 2;	//Pipe inlet label
int Outlet = 3;	//Pipe outlet label

real R = D/2.;
border b0(t=0., 2.*pi){x=R*cos(t); y=R*sin(t); label=0;};

int nnL = max(2., L*nn);
int nnR = max(2., 2.*pi*R*nn);

mesh Th0 = buildmesh(b0(nnR));

int[int] ldown = [0, Inlet];
int[int] lmid = [0, Wall];
int[int] lup = [0, Outlet];
mesh3 Th = buildlayers(Th0, nnL, zbound=[0., L], labeldown=ldown, labelmid=lmid, labelup=lup);

//Fespace
fespace Uh(Th, [P2, P2, P2]);
Uh [ux, uy, uz];
Uh [vx, vy, vz];

fespace Ph(Th, P1);
Ph p;
Ph q;

//Macro
macro Gradient(u) [dx(u), dy(u), dz(u)] //
macro Divergence(ux, uy, uz) (dx(ux) + dy(uy) + dz(uz)) //

//Function
func uIn = 1.-(x^2+y^2)/R^2;

//Problem
problem S ([ux, uy, uz, p],[vx, vy, vz, q])
	= int3d(Th)(
		  Mu * (
			  Gradient(ux)' * Gradient(vx)
			+ Gradient(uy)' * Gradient(vy)
			+ Gradient(uz)' * Gradient(vz)
		)
		- p * Divergence(vx, vy, vz)
		- Divergence(ux, uy, uz) * q
	)
	- int3d(Th)(
		fx*vx + fy*vy + fz*vz
	)
	+ on(Inlet, ux=0., uy=0., uz=uIn)
	+ on(Wall, ux=0., uy=0., uz=0.)
	;

S;

//Plot
plot(p, cmm="Presure");
plot([ux, uy, uz], cmm="Velocity");

//Save
{
	fespace PVh(Th, P1);
	PVh uux = ux;
	PVh uuy = uy;
	PVh uuz = uz;
	PVh pp = p;
	int[int] fforder = [1, 1];
	savevtk("Results/Result_3D.vtu", Th, [uux, uuy, uuz], pp, dataname="Velocity Pressure", order=fforder);
}



